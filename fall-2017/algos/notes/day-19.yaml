Class: Data Structures and Algorithms 
Name: William Horn
Date: Oct 30, 2017

Sequences in C++ STL:
    Containers:
        - vector, basic_string, array (array<int, 4>), forward_list, list, dequ (double ended queue)

        Deque:
            - items stored in middle of allocation
            - array of pointers to arrays, to increase copy speed

    Iterator Validity:
        - iterator that no longer points to an array has been invalidated
        
        Rules:
            - reference validity rules.

            vector:
                - reallocate/copy invalidates all iters
                - insert befor the iterators position 

            deque:
                - insertion/erase in middle invalides all iters and refs
                - inersion at end/begining invalidates all iters, but no references

            list:
                - iters and refs always remain valid.


Stack:
    LIFO: 
        - last in first out

    Top down design:
        - large task, with subtasks
        - push large task state when doing a subtask, the pop to get back.
        - can do this for each subtask

    Operations:
        getTop: look at top item
        push: add an item
        pop: remove an item

        isEmpty: check if the stack is empty

    Note:
        - just a wrapper around an existing sequence.
