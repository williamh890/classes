Class: Data Structures and Algorithm 
Name: William Horn
Date: Oct 16, 2017

Lamda Functions:
    Closures:
        - when a function carries (part of) its enviroment with it.

Data Structures:
    Containers:
         - array, linked list, ...
         - something that holds data.

    Abstraction:
        - separating module from implimentation.

        Data Abstraction:
            Abstract Data Type (ADT):
                - conceptual form of data
                - operation available on data
            Interface:
                - methods used to acess

        Abstract Data Type:
            - collection of data with a set of opreations on it.
            - no related to a programing languages

            note: used heavily, but not mentioned much

            Data Structure:
                - a like a ADT, but a programming implimentation of it
                
            Example:
                triple:
                    Complete Minimal Interface:
                        - get, set, create w/ unspecified values, destroy
            
        Interface:
            Should Be:
                - complete
                - minimal, convenient
                - facilitate efficiency, generic

            Note:
                Often these properties pull against each other

        Sequence:
            - finite, all of the same type
            - position orented

        SortedSequence:
            - some operations in sequence change from regular sequence
            - value-oriented
    

