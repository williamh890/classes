Class: Data Structures and Algorithm 
Name: William Horn
Date: Oct 06, 2017

Asymptotic notation: 
    Omega:
        - f(n) is Omega(g(n)) iff g(n) is O(f(n))
        - average best case.
    Theta:
        - similar to equal
        - it's both O(f(n)) and Omega(f(n))

        Example: 
            - function would be Theta(n^2) if it always lies between
              3n^2 and 5n^2

    Summary:
        O(f(n)) if g(n)     <= k(f(n)), k is constant
        Omega(f(n)) if g(n) >= k(f(n)), k is constant
        Theta(f(n)) if both O and theta

Algorithm Strategy:
    Decrease-and-Conquer:
        - used by binary search
    Divide-and-Conquer:
        - divide up the problem into smaller chucks and 
          then handle those chuncks.

    Analyzing Recursive Algos:
        Masters Theorem:
            - (b) split input into nearly == sized parts
            - (a) makes a number of recursive calls on splits
            - (f(n)) does other work, with f(n) ops

        Theorem:
            T(n) = a * T(n/b) + f(n)

        Example:
            Binary Search:
                b = 2  // number of splits of the inputs
                a = 1  // number of recursive calls 
                f(n) element of O(1) == O(n^0) soooo
                d = 0

            Comparing:
                - 1 == 2^0 so T(n) is Theta(n^d log n)
                - since d == 0 T(n) == log n

    Merge Sort:
        - application of divide and conquer
        - fastest know generic known comparision sort 

