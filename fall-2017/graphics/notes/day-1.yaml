Introduction:
    Laguages: 
        Processing, Javascript, GLSL
    Overview:
        intro to processing
        webGL
        3-d scenes
        shaders and lighting
        textures
        group project

    Modeling and Rendering:
        Scene:
            Totality of everything to draw, visible or not.
        Modeling:
            precise description of a scene in graphics primitives

            Graphics Primitives:
                units that graphics system can draw

        Rendering:
            Produce image based on a model.

            Framebuffer:
               Where stuff goes while its rendering. 
            Viewport:
                what we can actually see.
            
            Methdods:
                Pipeline:
                    Draw objects one after another, each go through a pipline of operations

                Ray Tracing:
                    Drawing is done pixel by pixel, instead of objects. (very slow)

                Notes:
                    Game engines often have custom, optimized, rendering methods.

            Standard Rendering Pipline:
                (vertex processing, input img) -> (rasterization) -> (fragment processing) -> frame buffer

                Vertex processing:
                    Point in space
                    
                    Use:
                        Represntation of a corner of a triangle.

                    Vertices:
                        Point in space
                        Bunches used to represent primatives

                    Transformations:
                        rotation, turns, perspective
                    Clipping:
                        Cutting out things not in the viewport
                
                Rasterization:
                    vertices -> fragments
                    
                    Fragment:
                       Piece of info that wants to be a pixel. 

                Fragment Processing:
                    Fragments dont effect eachother (unlike vertices)
                    
                    Possible Operations:
                        hidden-surface removal (HSR), color blending, fog.

                    Questions:
                        Should frag become pixel? If so what color?
                    Notes:
                        Fragment processing can be done in parallel.

Shader! Never met her!

            Fixed-Function Pipeline (ffp):
                Fixed set of operations.

            Programmable Pipline:
                Shader:
                    program executed by gpu as part of the pipline.
